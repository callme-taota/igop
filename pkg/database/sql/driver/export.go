// export by github.com/goplus/gossa/cmd/qexp

package driver

import (
	"database/sql/driver"

	"github.com/goplus/gossa"
)

func init() {
	gossa.RegisterPackage("database/sql/driver", extMap, typList)
}

var extMap = map[string]interface{}{
	"(database/sql/driver.ColumnConverter).ColumnConverter":                           (driver.ColumnConverter).ColumnConverter,
	"(database/sql/driver.Conn).Begin":                                                (driver.Conn).Begin,
	"(database/sql/driver.Conn).Close":                                                (driver.Conn).Close,
	"(database/sql/driver.Conn).Prepare":                                              (driver.Conn).Prepare,
	"(database/sql/driver.ConnBeginTx).BeginTx":                                       (driver.ConnBeginTx).BeginTx,
	"(database/sql/driver.ConnPrepareContext).PrepareContext":                         (driver.ConnPrepareContext).PrepareContext,
	"(database/sql/driver.Connector).Connect":                                         (driver.Connector).Connect,
	"(database/sql/driver.Connector).Driver":                                          (driver.Connector).Driver,
	"(database/sql/driver.Driver).Open":                                               (driver.Driver).Open,
	"(database/sql/driver.DriverContext).OpenConnector":                               (driver.DriverContext).OpenConnector,
	"(database/sql/driver.Execer).Exec":                                               (driver.Execer).Exec,
	"(database/sql/driver.ExecerContext).ExecContext":                                 (driver.ExecerContext).ExecContext,
	"(database/sql/driver.NamedValueChecker).CheckNamedValue":                         (driver.NamedValueChecker).CheckNamedValue,
	"(database/sql/driver.NotNull).ConvertValue":                                      (driver.NotNull).ConvertValue,
	"(database/sql/driver.Null).ConvertValue":                                         (driver.Null).ConvertValue,
	"(database/sql/driver.Pinger).Ping":                                               (driver.Pinger).Ping,
	"(database/sql/driver.Queryer).Query":                                             (driver.Queryer).Query,
	"(database/sql/driver.QueryerContext).QueryContext":                               (driver.QueryerContext).QueryContext,
	"(database/sql/driver.Result).LastInsertId":                                       (driver.Result).LastInsertId,
	"(database/sql/driver.Result).RowsAffected":                                       (driver.Result).RowsAffected,
	"(database/sql/driver.Rows).Close":                                                (driver.Rows).Close,
	"(database/sql/driver.Rows).Columns":                                              (driver.Rows).Columns,
	"(database/sql/driver.Rows).Next":                                                 (driver.Rows).Next,
	"(database/sql/driver.RowsAffected).LastInsertId":                                 (driver.RowsAffected).LastInsertId,
	"(database/sql/driver.RowsAffected).RowsAffected":                                 (driver.RowsAffected).RowsAffected,
	"(database/sql/driver.RowsColumnTypeDatabaseTypeName).Close":                      (driver.RowsColumnTypeDatabaseTypeName).Close,
	"(database/sql/driver.RowsColumnTypeDatabaseTypeName).ColumnTypeDatabaseTypeName": (driver.RowsColumnTypeDatabaseTypeName).ColumnTypeDatabaseTypeName,
	"(database/sql/driver.RowsColumnTypeDatabaseTypeName).Columns":                    (driver.RowsColumnTypeDatabaseTypeName).Columns,
	"(database/sql/driver.RowsColumnTypeDatabaseTypeName).Next":                       (driver.RowsColumnTypeDatabaseTypeName).Next,
	"(database/sql/driver.RowsColumnTypeLength).Close":                                (driver.RowsColumnTypeLength).Close,
	"(database/sql/driver.RowsColumnTypeLength).ColumnTypeLength":                     (driver.RowsColumnTypeLength).ColumnTypeLength,
	"(database/sql/driver.RowsColumnTypeLength).Columns":                              (driver.RowsColumnTypeLength).Columns,
	"(database/sql/driver.RowsColumnTypeLength).Next":                                 (driver.RowsColumnTypeLength).Next,
	"(database/sql/driver.RowsColumnTypeNullable).Close":                              (driver.RowsColumnTypeNullable).Close,
	"(database/sql/driver.RowsColumnTypeNullable).ColumnTypeNullable":                 (driver.RowsColumnTypeNullable).ColumnTypeNullable,
	"(database/sql/driver.RowsColumnTypeNullable).Columns":                            (driver.RowsColumnTypeNullable).Columns,
	"(database/sql/driver.RowsColumnTypeNullable).Next":                               (driver.RowsColumnTypeNullable).Next,
	"(database/sql/driver.RowsColumnTypePrecisionScale).Close":                        (driver.RowsColumnTypePrecisionScale).Close,
	"(database/sql/driver.RowsColumnTypePrecisionScale).ColumnTypePrecisionScale":     (driver.RowsColumnTypePrecisionScale).ColumnTypePrecisionScale,
	"(database/sql/driver.RowsColumnTypePrecisionScale).Columns":                      (driver.RowsColumnTypePrecisionScale).Columns,
	"(database/sql/driver.RowsColumnTypePrecisionScale).Next":                         (driver.RowsColumnTypePrecisionScale).Next,
	"(database/sql/driver.RowsColumnTypeScanType).Close":                              (driver.RowsColumnTypeScanType).Close,
	"(database/sql/driver.RowsColumnTypeScanType).ColumnTypeScanType":                 (driver.RowsColumnTypeScanType).ColumnTypeScanType,
	"(database/sql/driver.RowsColumnTypeScanType).Columns":                            (driver.RowsColumnTypeScanType).Columns,
	"(database/sql/driver.RowsColumnTypeScanType).Next":                               (driver.RowsColumnTypeScanType).Next,
	"(database/sql/driver.RowsNextResultSet).Close":                                   (driver.RowsNextResultSet).Close,
	"(database/sql/driver.RowsNextResultSet).Columns":                                 (driver.RowsNextResultSet).Columns,
	"(database/sql/driver.RowsNextResultSet).HasNextResultSet":                        (driver.RowsNextResultSet).HasNextResultSet,
	"(database/sql/driver.RowsNextResultSet).Next":                                    (driver.RowsNextResultSet).Next,
	"(database/sql/driver.RowsNextResultSet).NextResultSet":                           (driver.RowsNextResultSet).NextResultSet,
	"(database/sql/driver.SessionResetter).ResetSession":                              (driver.SessionResetter).ResetSession,
	"(database/sql/driver.Stmt).Close":                                                (driver.Stmt).Close,
	"(database/sql/driver.Stmt).Exec":                                                 (driver.Stmt).Exec,
	"(database/sql/driver.Stmt).NumInput":                                             (driver.Stmt).NumInput,
	"(database/sql/driver.Stmt).Query":                                                (driver.Stmt).Query,
	"(database/sql/driver.StmtExecContext).ExecContext":                               (driver.StmtExecContext).ExecContext,
	"(database/sql/driver.StmtQueryContext).QueryContext":                             (driver.StmtQueryContext).QueryContext,
	"(database/sql/driver.Tx).Commit":                                                 (driver.Tx).Commit,
	"(database/sql/driver.Tx).Rollback":                                               (driver.Tx).Rollback,
	"(database/sql/driver.ValueConverter).ConvertValue":                               (driver.ValueConverter).ConvertValue,
	"(database/sql/driver.Valuer).Value":                                              (driver.Valuer).Value,
	"database/sql/driver.Bool":                                                        &driver.Bool,
	"database/sql/driver.DefaultParameterConverter":                                   &driver.DefaultParameterConverter,
	"database/sql/driver.ErrBadConn":                                                  &driver.ErrBadConn,
	"database/sql/driver.ErrRemoveArgument":                                           &driver.ErrRemoveArgument,
	"database/sql/driver.ErrSkip":                                                     &driver.ErrSkip,
	"database/sql/driver.Int32":                                                       &driver.Int32,
	"database/sql/driver.IsScanValue":                                                 driver.IsScanValue,
	"database/sql/driver.IsValue":                                                     driver.IsValue,
	"database/sql/driver.ResultNoRows":                                                &driver.ResultNoRows,
	"database/sql/driver.String":                                                      &driver.String,
}

var typList = []interface{}{
	(*driver.ColumnConverter)(nil),
	(*driver.Conn)(nil),
	(*driver.ConnBeginTx)(nil),
	(*driver.ConnPrepareContext)(nil),
	(*driver.Connector)(nil),
	(*driver.Driver)(nil),
	(*driver.DriverContext)(nil),
	(*driver.Execer)(nil),
	(*driver.ExecerContext)(nil),
	(*driver.IsolationLevel)(nil),
	(*driver.NamedValue)(nil),
	(*driver.NamedValueChecker)(nil),
	(*driver.NotNull)(nil),
	(*driver.Null)(nil),
	(*driver.Pinger)(nil),
	(*driver.Queryer)(nil),
	(*driver.QueryerContext)(nil),
	(*driver.Result)(nil),
	(*driver.Rows)(nil),
	(*driver.RowsAffected)(nil),
	(*driver.RowsColumnTypeDatabaseTypeName)(nil),
	(*driver.RowsColumnTypeLength)(nil),
	(*driver.RowsColumnTypeNullable)(nil),
	(*driver.RowsColumnTypePrecisionScale)(nil),
	(*driver.RowsColumnTypeScanType)(nil),
	(*driver.RowsNextResultSet)(nil),
	(*driver.SessionResetter)(nil),
	(*driver.Stmt)(nil),
	(*driver.StmtExecContext)(nil),
	(*driver.StmtQueryContext)(nil),
	(*driver.Tx)(nil),
	(*driver.TxOptions)(nil),
	(*driver.Value)(nil),
	(*driver.ValueConverter)(nil),
	(*driver.Valuer)(nil),
}
