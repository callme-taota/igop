// export by github.com/goplus/gossa/cmd/qexp

package http

import (
	"net/http"

	"github.com/goplus/gossa"
)

func init() {
	gossa.RegisterPackage("net/http", extMap, typList)
}

var extMap = map[string]interface{}{
	"(*net/http.Client).CloseIdleConnections":    (*http.Client).CloseIdleConnections,
	"(*net/http.Client).Do":                      (*http.Client).Do,
	"(*net/http.Client).Get":                     (*http.Client).Get,
	"(*net/http.Client).Head":                    (*http.Client).Head,
	"(*net/http.Client).Post":                    (*http.Client).Post,
	"(*net/http.Client).PostForm":                (*http.Client).PostForm,
	"(*net/http.Cookie).String":                  (*http.Cookie).String,
	"(*net/http.ProtocolError).Error":            (*http.ProtocolError).Error,
	"(*net/http.Request).AddCookie":              (*http.Request).AddCookie,
	"(*net/http.Request).BasicAuth":              (*http.Request).BasicAuth,
	"(*net/http.Request).Clone":                  (*http.Request).Clone,
	"(*net/http.Request).Context":                (*http.Request).Context,
	"(*net/http.Request).Cookie":                 (*http.Request).Cookie,
	"(*net/http.Request).Cookies":                (*http.Request).Cookies,
	"(*net/http.Request).FormFile":               (*http.Request).FormFile,
	"(*net/http.Request).FormValue":              (*http.Request).FormValue,
	"(*net/http.Request).MultipartReader":        (*http.Request).MultipartReader,
	"(*net/http.Request).ParseForm":              (*http.Request).ParseForm,
	"(*net/http.Request).ParseMultipartForm":     (*http.Request).ParseMultipartForm,
	"(*net/http.Request).PostFormValue":          (*http.Request).PostFormValue,
	"(*net/http.Request).ProtoAtLeast":           (*http.Request).ProtoAtLeast,
	"(*net/http.Request).Referer":                (*http.Request).Referer,
	"(*net/http.Request).SetBasicAuth":           (*http.Request).SetBasicAuth,
	"(*net/http.Request).UserAgent":              (*http.Request).UserAgent,
	"(*net/http.Request).WithContext":            (*http.Request).WithContext,
	"(*net/http.Request).Write":                  (*http.Request).Write,
	"(*net/http.Request).WriteProxy":             (*http.Request).WriteProxy,
	"(*net/http.Response).Cookies":               (*http.Response).Cookies,
	"(*net/http.Response).Location":              (*http.Response).Location,
	"(*net/http.Response).ProtoAtLeast":          (*http.Response).ProtoAtLeast,
	"(*net/http.Response).Write":                 (*http.Response).Write,
	"(*net/http.ServeMux).Handle":                (*http.ServeMux).Handle,
	"(*net/http.ServeMux).HandleFunc":            (*http.ServeMux).HandleFunc,
	"(*net/http.ServeMux).Handler":               (*http.ServeMux).Handler,
	"(*net/http.ServeMux).ServeHTTP":             (*http.ServeMux).ServeHTTP,
	"(*net/http.Server).Close":                   (*http.Server).Close,
	"(*net/http.Server).ListenAndServe":          (*http.Server).ListenAndServe,
	"(*net/http.Server).ListenAndServeTLS":       (*http.Server).ListenAndServeTLS,
	"(*net/http.Server).RegisterOnShutdown":      (*http.Server).RegisterOnShutdown,
	"(*net/http.Server).Serve":                   (*http.Server).Serve,
	"(*net/http.Server).ServeTLS":                (*http.Server).ServeTLS,
	"(*net/http.Server).SetKeepAlivesEnabled":    (*http.Server).SetKeepAlivesEnabled,
	"(*net/http.Server).Shutdown":                (*http.Server).Shutdown,
	"(*net/http.Transport).CancelRequest":        (*http.Transport).CancelRequest,
	"(*net/http.Transport).Clone":                (*http.Transport).Clone,
	"(*net/http.Transport).CloseIdleConnections": (*http.Transport).CloseIdleConnections,
	"(*net/http.Transport).RegisterProtocol":     (*http.Transport).RegisterProtocol,
	"(*net/http.Transport).RoundTrip":            (*http.Transport).RoundTrip,
	"(net/http.CloseNotifier).CloseNotify":       (http.CloseNotifier).CloseNotify,
	"(net/http.ConnState).String":                (http.ConnState).String,
	"(net/http.CookieJar).Cookies":               (http.CookieJar).Cookies,
	"(net/http.CookieJar).SetCookies":            (http.CookieJar).SetCookies,
	"(net/http.Dir).Open":                        (http.Dir).Open,
	"(net/http.File).Close":                      (http.File).Close,
	"(net/http.File).Read":                       (http.File).Read,
	"(net/http.File).Readdir":                    (http.File).Readdir,
	"(net/http.File).Seek":                       (http.File).Seek,
	"(net/http.File).Stat":                       (http.File).Stat,
	"(net/http.FileSystem).Open":                 (http.FileSystem).Open,
	"(net/http.Flusher).Flush":                   (http.Flusher).Flush,
	"(net/http.Handler).ServeHTTP":               (http.Handler).ServeHTTP,
	"(net/http.HandlerFunc).ServeHTTP":           (http.HandlerFunc).ServeHTTP,
	"(net/http.Header).Add":                      (http.Header).Add,
	"(net/http.Header).Clone":                    (http.Header).Clone,
	"(net/http.Header).Del":                      (http.Header).Del,
	"(net/http.Header).Get":                      (http.Header).Get,
	"(net/http.Header).Set":                      (http.Header).Set,
	"(net/http.Header).Values":                   (http.Header).Values,
	"(net/http.Header).Write":                    (http.Header).Write,
	"(net/http.Header).WriteSubset":              (http.Header).WriteSubset,
	"(net/http.Hijacker).Hijack":                 (http.Hijacker).Hijack,
	"(net/http.Pusher).Push":                     (http.Pusher).Push,
	"(net/http.ResponseWriter).Header":           (http.ResponseWriter).Header,
	"(net/http.ResponseWriter).Write":            (http.ResponseWriter).Write,
	"(net/http.ResponseWriter).WriteHeader":      (http.ResponseWriter).WriteHeader,
	"(net/http.RoundTripper).RoundTrip":          (http.RoundTripper).RoundTrip,
	"net/http.CanonicalHeaderKey":                http.CanonicalHeaderKey,
	"net/http.DefaultClient":                     &http.DefaultClient,
	"net/http.DefaultServeMux":                   &http.DefaultServeMux,
	"net/http.DefaultTransport":                  &http.DefaultTransport,
	"net/http.DetectContentType":                 http.DetectContentType,
	"net/http.ErrAbortHandler":                   &http.ErrAbortHandler,
	"net/http.ErrBodyNotAllowed":                 &http.ErrBodyNotAllowed,
	"net/http.ErrBodyReadAfterClose":             &http.ErrBodyReadAfterClose,
	"net/http.ErrContentLength":                  &http.ErrContentLength,
	"net/http.ErrHandlerTimeout":                 &http.ErrHandlerTimeout,
	"net/http.ErrHeaderTooLong":                  &http.ErrHeaderTooLong,
	"net/http.ErrHijacked":                       &http.ErrHijacked,
	"net/http.ErrLineTooLong":                    &http.ErrLineTooLong,
	"net/http.ErrMissingBoundary":                &http.ErrMissingBoundary,
	"net/http.ErrMissingContentLength":           &http.ErrMissingContentLength,
	"net/http.ErrMissingFile":                    &http.ErrMissingFile,
	"net/http.ErrNoCookie":                       &http.ErrNoCookie,
	"net/http.ErrNoLocation":                     &http.ErrNoLocation,
	"net/http.ErrNotMultipart":                   &http.ErrNotMultipart,
	"net/http.ErrNotSupported":                   &http.ErrNotSupported,
	"net/http.ErrServerClosed":                   &http.ErrServerClosed,
	"net/http.ErrShortBody":                      &http.ErrShortBody,
	"net/http.ErrSkipAltProtocol":                &http.ErrSkipAltProtocol,
	"net/http.ErrUnexpectedTrailer":              &http.ErrUnexpectedTrailer,
	"net/http.ErrUseLastResponse":                &http.ErrUseLastResponse,
	"net/http.ErrWriteAfterFlush":                &http.ErrWriteAfterFlush,
	"net/http.Error":                             http.Error,
	"net/http.FileServer":                        http.FileServer,
	"net/http.Get":                               http.Get,
	"net/http.Handle":                            http.Handle,
	"net/http.HandleFunc":                        http.HandleFunc,
	"net/http.Head":                              http.Head,
	"net/http.ListenAndServe":                    http.ListenAndServe,
	"net/http.ListenAndServeTLS":                 http.ListenAndServeTLS,
	"net/http.LocalAddrContextKey":               &http.LocalAddrContextKey,
	"net/http.MaxBytesReader":                    http.MaxBytesReader,
	"net/http.NewFileTransport":                  http.NewFileTransport,
	"net/http.NewRequest":                        http.NewRequest,
	"net/http.NewRequestWithContext":             http.NewRequestWithContext,
	"net/http.NewServeMux":                       http.NewServeMux,
	"net/http.NoBody":                            &http.NoBody,
	"net/http.NotFound":                          http.NotFound,
	"net/http.NotFoundHandler":                   http.NotFoundHandler,
	"net/http.ParseHTTPVersion":                  http.ParseHTTPVersion,
	"net/http.ParseTime":                         http.ParseTime,
	"net/http.Post":                              http.Post,
	"net/http.PostForm":                          http.PostForm,
	"net/http.ProxyFromEnvironment":              http.ProxyFromEnvironment,
	"net/http.ProxyURL":                          http.ProxyURL,
	"net/http.ReadRequest":                       http.ReadRequest,
	"net/http.ReadResponse":                      http.ReadResponse,
	"net/http.Redirect":                          http.Redirect,
	"net/http.RedirectHandler":                   http.RedirectHandler,
	"net/http.Serve":                             http.Serve,
	"net/http.ServeContent":                      http.ServeContent,
	"net/http.ServeFile":                         http.ServeFile,
	"net/http.ServeTLS":                          http.ServeTLS,
	"net/http.ServerContextKey":                  &http.ServerContextKey,
	"net/http.SetCookie":                         http.SetCookie,
	"net/http.StatusText":                        http.StatusText,
	"net/http.StripPrefix":                       http.StripPrefix,
	"net/http.TimeoutHandler":                    http.TimeoutHandler,
}

var typList = []interface{}{
	(*http.Client)(nil),
	(*http.CloseNotifier)(nil),
	(*http.ConnState)(nil),
	(*http.Cookie)(nil),
	(*http.CookieJar)(nil),
	(*http.Dir)(nil),
	(*http.File)(nil),
	(*http.FileSystem)(nil),
	(*http.Flusher)(nil),
	(*http.Handler)(nil),
	(*http.HandlerFunc)(nil),
	(*http.Header)(nil),
	(*http.Hijacker)(nil),
	(*http.ProtocolError)(nil),
	(*http.PushOptions)(nil),
	(*http.Pusher)(nil),
	(*http.Request)(nil),
	(*http.Response)(nil),
	(*http.ResponseWriter)(nil),
	(*http.RoundTripper)(nil),
	(*http.SameSite)(nil),
	(*http.ServeMux)(nil),
	(*http.Server)(nil),
	(*http.Transport)(nil),
}
