// export by github.com/goplus/interp/cmd/qexp

package os

import (
	"os"

	"github.com/goplus/interp"
)

func init() {
	interp.RegisterPackage("os", extMap, typList)
}

var extMap = map[string]interface{}{
	"(*os.File).Chdir":              (*os.File).Chdir,
	"(*os.File).Chmod":              (*os.File).Chmod,
	"(*os.File).Chown":              (*os.File).Chown,
	"(*os.File).Close":              (*os.File).Close,
	"(*os.File).Fd":                 (*os.File).Fd,
	"(*os.File).Name":               (*os.File).Name,
	"(*os.File).Read":               (*os.File).Read,
	"(*os.File).ReadAt":             (*os.File).ReadAt,
	"(*os.File).Readdir":            (*os.File).Readdir,
	"(*os.File).Readdirnames":       (*os.File).Readdirnames,
	"(*os.File).Seek":               (*os.File).Seek,
	"(*os.File).SetDeadline":        (*os.File).SetDeadline,
	"(*os.File).SetReadDeadline":    (*os.File).SetReadDeadline,
	"(*os.File).SetWriteDeadline":   (*os.File).SetWriteDeadline,
	"(*os.File).Stat":               (*os.File).Stat,
	"(*os.File).Sync":               (*os.File).Sync,
	"(*os.File).SyscallConn":        (*os.File).SyscallConn,
	"(*os.File).Truncate":           (*os.File).Truncate,
	"(*os.File).Write":              (*os.File).Write,
	"(*os.File).WriteAt":            (*os.File).WriteAt,
	"(*os.File).WriteString":        (*os.File).WriteString,
	"(*os.LinkError).Error":         (*os.LinkError).Error,
	"(*os.LinkError).Unwrap":        (*os.LinkError).Unwrap,
	"(*os.PathError).Error":         (*os.PathError).Error,
	"(*os.PathError).Timeout":       (*os.PathError).Timeout,
	"(*os.PathError).Unwrap":        (*os.PathError).Unwrap,
	"(*os.Process).Kill":            (*os.Process).Kill,
	"(*os.Process).Release":         (*os.Process).Release,
	"(*os.Process).Signal":          (*os.Process).Signal,
	"(*os.Process).Wait":            (*os.Process).Wait,
	"(*os.ProcessState).ExitCode":   (*os.ProcessState).ExitCode,
	"(*os.ProcessState).Exited":     (*os.ProcessState).Exited,
	"(*os.ProcessState).Pid":        (*os.ProcessState).Pid,
	"(*os.ProcessState).String":     (*os.ProcessState).String,
	"(*os.ProcessState).Success":    (*os.ProcessState).Success,
	"(*os.ProcessState).Sys":        (*os.ProcessState).Sys,
	"(*os.ProcessState).SysUsage":   (*os.ProcessState).SysUsage,
	"(*os.ProcessState).SystemTime": (*os.ProcessState).SystemTime,
	"(*os.ProcessState).UserTime":   (*os.ProcessState).UserTime,
	"(*os.SyscallError).Error":      (*os.SyscallError).Error,
	"(*os.SyscallError).Timeout":    (*os.SyscallError).Timeout,
	"(*os.SyscallError).Unwrap":     (*os.SyscallError).Unwrap,
	"(os.FileInfo).IsDir":           (os.FileInfo).IsDir,
	"(os.FileInfo).ModTime":         (os.FileInfo).ModTime,
	"(os.FileInfo).Mode":            (os.FileInfo).Mode,
	"(os.FileInfo).Name":            (os.FileInfo).Name,
	"(os.FileInfo).Size":            (os.FileInfo).Size,
	"(os.FileInfo).Sys":             (os.FileInfo).Sys,
	"(os.FileMode).IsDir":           (os.FileMode).IsDir,
	"(os.FileMode).IsRegular":       (os.FileMode).IsRegular,
	"(os.FileMode).Perm":            (os.FileMode).Perm,
	"(os.FileMode).String":          (os.FileMode).String,
	"(os.Signal).Signal":            (os.Signal).Signal,
	"(os.Signal).String":            (os.Signal).String,
	"os.Args":                       &os.Args,
	"os.Chdir":                      os.Chdir,
	"os.Chmod":                      os.Chmod,
	"os.Chown":                      os.Chown,
	"os.Chtimes":                    os.Chtimes,
	"os.Clearenv":                   os.Clearenv,
	"os.Create":                     os.Create,
	"os.Environ":                    os.Environ,
	"os.ErrClosed":                  &os.ErrClosed,
	"os.ErrExist":                   &os.ErrExist,
	"os.ErrInvalid":                 &os.ErrInvalid,
	"os.ErrNoDeadline":              &os.ErrNoDeadline,
	"os.ErrNotExist":                &os.ErrNotExist,
	"os.ErrPermission":              &os.ErrPermission,
	"os.Executable":                 os.Executable,
	"os.Exit":                       os.Exit,
	"os.Expand":                     os.Expand,
	"os.ExpandEnv":                  os.ExpandEnv,
	"os.FindProcess":                os.FindProcess,
	"os.Getegid":                    os.Getegid,
	"os.Getenv":                     os.Getenv,
	"os.Geteuid":                    os.Geteuid,
	"os.Getgid":                     os.Getgid,
	"os.Getgroups":                  os.Getgroups,
	"os.Getpagesize":                os.Getpagesize,
	"os.Getpid":                     os.Getpid,
	"os.Getppid":                    os.Getppid,
	"os.Getuid":                     os.Getuid,
	"os.Getwd":                      os.Getwd,
	"os.Hostname":                   os.Hostname,
	"os.Interrupt":                  &os.Interrupt,
	"os.IsExist":                    os.IsExist,
	"os.IsNotExist":                 os.IsNotExist,
	"os.IsPathSeparator":            os.IsPathSeparator,
	"os.IsPermission":               os.IsPermission,
	"os.IsTimeout":                  os.IsTimeout,
	"os.Kill":                       &os.Kill,
	"os.Lchown":                     os.Lchown,
	"os.Link":                       os.Link,
	"os.LookupEnv":                  os.LookupEnv,
	"os.Lstat":                      os.Lstat,
	"os.Mkdir":                      os.Mkdir,
	"os.MkdirAll":                   os.MkdirAll,
	"os.NewFile":                    os.NewFile,
	"os.NewSyscallError":            os.NewSyscallError,
	"os.Open":                       os.Open,
	"os.OpenFile":                   os.OpenFile,
	"os.Pipe":                       os.Pipe,
	"os.Readlink":                   os.Readlink,
	"os.Remove":                     os.Remove,
	"os.RemoveAll":                  os.RemoveAll,
	"os.Rename":                     os.Rename,
	"os.SameFile":                   os.SameFile,
	"os.Setenv":                     os.Setenv,
	"os.StartProcess":               os.StartProcess,
	"os.Stat":                       os.Stat,
	"os.Stderr":                     &os.Stderr,
	"os.Stdin":                      &os.Stdin,
	"os.Stdout":                     &os.Stdout,
	"os.Symlink":                    os.Symlink,
	"os.TempDir":                    os.TempDir,
	"os.Truncate":                   os.Truncate,
	"os.Unsetenv":                   os.Unsetenv,
	"os.UserCacheDir":               os.UserCacheDir,
	"os.UserConfigDir":              os.UserConfigDir,
	"os.UserHomeDir":                os.UserHomeDir,
}

var typList = []interface{}{
	(*os.File)(nil),
	(*os.FileInfo)(nil),
	(*os.FileMode)(nil),
	(*os.LinkError)(nil),
	(*os.PathError)(nil),
	(*os.ProcAttr)(nil),
	(*os.Process)(nil),
	(*os.ProcessState)(nil),
	(*os.Signal)(nil),
	(*os.SyscallError)(nil),
}
