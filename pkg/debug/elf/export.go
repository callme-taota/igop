// export by github.com/goplus/interp/cmd/qexp

package elf

import (
	"debug/elf"

	"github.com/goplus/interp"
)

func init() {
	interp.RegisterPackage("debug/elf", extMap, typList)
}

var extMap = map[string]interface{}{
	"(*debug/elf.File).Close":              (*elf.File).Close,
	"(*debug/elf.File).DWARF":              (*elf.File).DWARF,
	"(*debug/elf.File).DynString":          (*elf.File).DynString,
	"(*debug/elf.File).DynamicSymbols":     (*elf.File).DynamicSymbols,
	"(*debug/elf.File).ImportedLibraries":  (*elf.File).ImportedLibraries,
	"(*debug/elf.File).ImportedSymbols":    (*elf.File).ImportedSymbols,
	"(*debug/elf.File).Section":            (*elf.File).Section,
	"(*debug/elf.File).SectionByType":      (*elf.File).SectionByType,
	"(*debug/elf.File).Symbols":            (*elf.File).Symbols,
	"(*debug/elf.FormatError).Error":       (*elf.FormatError).Error,
	"(*debug/elf.Prog).Open":               (*elf.Prog).Open,
	"(*debug/elf.Section).Data":            (*elf.Section).Data,
	"(*debug/elf.Section).Open":            (*elf.Section).Open,
	"(debug/elf.Class).GoString":           (elf.Class).GoString,
	"(debug/elf.Class).String":             (elf.Class).String,
	"(debug/elf.CompressionType).GoString": (elf.CompressionType).GoString,
	"(debug/elf.CompressionType).String":   (elf.CompressionType).String,
	"(debug/elf.Data).GoString":            (elf.Data).GoString,
	"(debug/elf.Data).String":              (elf.Data).String,
	"(debug/elf.DynFlag).GoString":         (elf.DynFlag).GoString,
	"(debug/elf.DynFlag).String":           (elf.DynFlag).String,
	"(debug/elf.DynTag).GoString":          (elf.DynTag).GoString,
	"(debug/elf.DynTag).String":            (elf.DynTag).String,
	"(debug/elf.Machine).GoString":         (elf.Machine).GoString,
	"(debug/elf.Machine).String":           (elf.Machine).String,
	"(debug/elf.NType).GoString":           (elf.NType).GoString,
	"(debug/elf.NType).String":             (elf.NType).String,
	"(debug/elf.OSABI).GoString":           (elf.OSABI).GoString,
	"(debug/elf.OSABI).String":             (elf.OSABI).String,
	"(debug/elf.Prog).ReadAt":              (elf.Prog).ReadAt,
	"(debug/elf.ProgFlag).GoString":        (elf.ProgFlag).GoString,
	"(debug/elf.ProgFlag).String":          (elf.ProgFlag).String,
	"(debug/elf.ProgType).GoString":        (elf.ProgType).GoString,
	"(debug/elf.ProgType).String":          (elf.ProgType).String,
	"(debug/elf.R_386).GoString":           (elf.R_386).GoString,
	"(debug/elf.R_386).String":             (elf.R_386).String,
	"(debug/elf.R_390).GoString":           (elf.R_390).GoString,
	"(debug/elf.R_390).String":             (elf.R_390).String,
	"(debug/elf.R_AARCH64).GoString":       (elf.R_AARCH64).GoString,
	"(debug/elf.R_AARCH64).String":         (elf.R_AARCH64).String,
	"(debug/elf.R_ALPHA).GoString":         (elf.R_ALPHA).GoString,
	"(debug/elf.R_ALPHA).String":           (elf.R_ALPHA).String,
	"(debug/elf.R_ARM).GoString":           (elf.R_ARM).GoString,
	"(debug/elf.R_ARM).String":             (elf.R_ARM).String,
	"(debug/elf.R_MIPS).GoString":          (elf.R_MIPS).GoString,
	"(debug/elf.R_MIPS).String":            (elf.R_MIPS).String,
	"(debug/elf.R_PPC).GoString":           (elf.R_PPC).GoString,
	"(debug/elf.R_PPC).String":             (elf.R_PPC).String,
	"(debug/elf.R_PPC64).GoString":         (elf.R_PPC64).GoString,
	"(debug/elf.R_PPC64).String":           (elf.R_PPC64).String,
	"(debug/elf.R_RISCV).GoString":         (elf.R_RISCV).GoString,
	"(debug/elf.R_RISCV).String":           (elf.R_RISCV).String,
	"(debug/elf.R_SPARC).GoString":         (elf.R_SPARC).GoString,
	"(debug/elf.R_SPARC).String":           (elf.R_SPARC).String,
	"(debug/elf.R_X86_64).GoString":        (elf.R_X86_64).GoString,
	"(debug/elf.R_X86_64).String":          (elf.R_X86_64).String,
	"(debug/elf.Section).ReadAt":           (elf.Section).ReadAt,
	"(debug/elf.SectionFlag).GoString":     (elf.SectionFlag).GoString,
	"(debug/elf.SectionFlag).String":       (elf.SectionFlag).String,
	"(debug/elf.SectionIndex).GoString":    (elf.SectionIndex).GoString,
	"(debug/elf.SectionIndex).String":      (elf.SectionIndex).String,
	"(debug/elf.SectionType).GoString":     (elf.SectionType).GoString,
	"(debug/elf.SectionType).String":       (elf.SectionType).String,
	"(debug/elf.SymBind).GoString":         (elf.SymBind).GoString,
	"(debug/elf.SymBind).String":           (elf.SymBind).String,
	"(debug/elf.SymType).GoString":         (elf.SymType).GoString,
	"(debug/elf.SymType).String":           (elf.SymType).String,
	"(debug/elf.SymVis).GoString":          (elf.SymVis).GoString,
	"(debug/elf.SymVis).String":            (elf.SymVis).String,
	"(debug/elf.Type).GoString":            (elf.Type).GoString,
	"(debug/elf.Type).String":              (elf.Type).String,
	"(debug/elf.Version).GoString":         (elf.Version).GoString,
	"(debug/elf.Version).String":           (elf.Version).String,
	"debug/elf.ErrNoSymbols":               &elf.ErrNoSymbols,
	"debug/elf.NewFile":                    elf.NewFile,
	"debug/elf.Open":                       elf.Open,
	"debug/elf.R_INFO":                     elf.R_INFO,
	"debug/elf.R_INFO32":                   elf.R_INFO32,
	"debug/elf.R_SYM32":                    elf.R_SYM32,
	"debug/elf.R_SYM64":                    elf.R_SYM64,
	"debug/elf.R_TYPE32":                   elf.R_TYPE32,
	"debug/elf.R_TYPE64":                   elf.R_TYPE64,
	"debug/elf.ST_BIND":                    elf.ST_BIND,
	"debug/elf.ST_INFO":                    elf.ST_INFO,
	"debug/elf.ST_TYPE":                    elf.ST_TYPE,
	"debug/elf.ST_VISIBILITY":              elf.ST_VISIBILITY,
}

var typList = []interface{}{
	(*elf.Chdr32)(nil),
	(*elf.Chdr64)(nil),
	(*elf.Class)(nil),
	(*elf.CompressionType)(nil),
	(*elf.Data)(nil),
	(*elf.Dyn32)(nil),
	(*elf.Dyn64)(nil),
	(*elf.DynFlag)(nil),
	(*elf.DynTag)(nil),
	(*elf.File)(nil),
	(*elf.FileHeader)(nil),
	(*elf.FormatError)(nil),
	(*elf.Header32)(nil),
	(*elf.Header64)(nil),
	(*elf.ImportedSymbol)(nil),
	(*elf.Machine)(nil),
	(*elf.NType)(nil),
	(*elf.OSABI)(nil),
	(*elf.Prog)(nil),
	(*elf.Prog32)(nil),
	(*elf.Prog64)(nil),
	(*elf.ProgFlag)(nil),
	(*elf.ProgHeader)(nil),
	(*elf.ProgType)(nil),
	(*elf.R_386)(nil),
	(*elf.R_390)(nil),
	(*elf.R_AARCH64)(nil),
	(*elf.R_ALPHA)(nil),
	(*elf.R_ARM)(nil),
	(*elf.R_MIPS)(nil),
	(*elf.R_PPC)(nil),
	(*elf.R_PPC64)(nil),
	(*elf.R_RISCV)(nil),
	(*elf.R_SPARC)(nil),
	(*elf.R_X86_64)(nil),
	(*elf.Rel32)(nil),
	(*elf.Rel64)(nil),
	(*elf.Rela32)(nil),
	(*elf.Rela64)(nil),
	(*elf.Section)(nil),
	(*elf.Section32)(nil),
	(*elf.Section64)(nil),
	(*elf.SectionFlag)(nil),
	(*elf.SectionHeader)(nil),
	(*elf.SectionIndex)(nil),
	(*elf.SectionType)(nil),
	(*elf.Sym32)(nil),
	(*elf.Sym64)(nil),
	(*elf.SymBind)(nil),
	(*elf.SymType)(nil),
	(*elf.SymVis)(nil),
	(*elf.Symbol)(nil),
	(*elf.Type)(nil),
	(*elf.Version)(nil),
}
