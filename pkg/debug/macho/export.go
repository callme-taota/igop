// export by github.com/goplus/gossa/cmd/qexp

package macho

import (
	q "debug/macho"

	"go/constant"
	"reflect"

	"github.com/goplus/gossa"
)

func init() {
	gossa.RegisterPackage(&gossa.Package{
		Name: "macho",
		Path: "debug/macho",
		Deps: map[string]string{
			"bytes":           "bytes",
			"compress/zlib":   "zlib",
			"debug/dwarf":     "dwarf",
			"encoding/binary": "binary",
			"fmt":             "fmt",
			"io":              "io",
			"os":              "os",
			"strconv":         "strconv",
			"strings":         "strings",
		},
		Interfaces: map[string]reflect.Type{
			"Load": reflect.TypeOf((*q.Load)(nil)).Elem(),
		},
		NamedTypes: map[string]gossa.NamedType{
			"Cpu":              {reflect.TypeOf((*q.Cpu)(nil)).Elem(), "GoString,String", ""},
			"Dylib":            {reflect.TypeOf((*q.Dylib)(nil)).Elem(), "", ""},
			"DylibCmd":         {reflect.TypeOf((*q.DylibCmd)(nil)).Elem(), "", ""},
			"Dysymtab":         {reflect.TypeOf((*q.Dysymtab)(nil)).Elem(), "", ""},
			"DysymtabCmd":      {reflect.TypeOf((*q.DysymtabCmd)(nil)).Elem(), "", ""},
			"FatArch":          {reflect.TypeOf((*q.FatArch)(nil)).Elem(), "", ""},
			"FatArchHeader":    {reflect.TypeOf((*q.FatArchHeader)(nil)).Elem(), "", ""},
			"FatFile":          {reflect.TypeOf((*q.FatFile)(nil)).Elem(), "", "Close"},
			"File":             {reflect.TypeOf((*q.File)(nil)).Elem(), "", "Close,DWARF,ImportedLibraries,ImportedSymbols,Section,Segment,parseSymtab,pushSection"},
			"FileHeader":       {reflect.TypeOf((*q.FileHeader)(nil)).Elem(), "", ""},
			"FormatError":      {reflect.TypeOf((*q.FormatError)(nil)).Elem(), "", "Error"},
			"LoadBytes":        {reflect.TypeOf((*q.LoadBytes)(nil)).Elem(), "Raw", ""},
			"LoadCmd":          {reflect.TypeOf((*q.LoadCmd)(nil)).Elem(), "GoString,String", ""},
			"Nlist32":          {reflect.TypeOf((*q.Nlist32)(nil)).Elem(), "", ""},
			"Nlist64":          {reflect.TypeOf((*q.Nlist64)(nil)).Elem(), "", ""},
			"Regs386":          {reflect.TypeOf((*q.Regs386)(nil)).Elem(), "", ""},
			"RegsAMD64":        {reflect.TypeOf((*q.RegsAMD64)(nil)).Elem(), "", ""},
			"Reloc":            {reflect.TypeOf((*q.Reloc)(nil)).Elem(), "", ""},
			"RelocTypeARM":     {reflect.TypeOf((*q.RelocTypeARM)(nil)).Elem(), "GoString,String", ""},
			"RelocTypeARM64":   {reflect.TypeOf((*q.RelocTypeARM64)(nil)).Elem(), "GoString,String", ""},
			"RelocTypeGeneric": {reflect.TypeOf((*q.RelocTypeGeneric)(nil)).Elem(), "GoString,String", ""},
			"RelocTypeX86_64":  {reflect.TypeOf((*q.RelocTypeX86_64)(nil)).Elem(), "GoString,String", ""},
			"Rpath":            {reflect.TypeOf((*q.Rpath)(nil)).Elem(), "", ""},
			"RpathCmd":         {reflect.TypeOf((*q.RpathCmd)(nil)).Elem(), "", ""},
			"Section":          {reflect.TypeOf((*q.Section)(nil)).Elem(), "", "Data,Open"},
			"Section32":        {reflect.TypeOf((*q.Section32)(nil)).Elem(), "", ""},
			"Section64":        {reflect.TypeOf((*q.Section64)(nil)).Elem(), "", ""},
			"SectionHeader":    {reflect.TypeOf((*q.SectionHeader)(nil)).Elem(), "", ""},
			"Segment":          {reflect.TypeOf((*q.Segment)(nil)).Elem(), "", "Data,Open"},
			"Segment32":        {reflect.TypeOf((*q.Segment32)(nil)).Elem(), "", ""},
			"Segment64":        {reflect.TypeOf((*q.Segment64)(nil)).Elem(), "", ""},
			"SegmentHeader":    {reflect.TypeOf((*q.SegmentHeader)(nil)).Elem(), "", ""},
			"Symbol":           {reflect.TypeOf((*q.Symbol)(nil)).Elem(), "", ""},
			"Symtab":           {reflect.TypeOf((*q.Symtab)(nil)).Elem(), "", ""},
			"SymtabCmd":        {reflect.TypeOf((*q.SymtabCmd)(nil)).Elem(), "", ""},
			"Thread":           {reflect.TypeOf((*q.Thread)(nil)).Elem(), "", ""},
			"Type":             {reflect.TypeOf((*q.Type)(nil)).Elem(), "GoString,String", ""},
		},
		AliasTypes: map[string]reflect.Type{},
		Vars: map[string]reflect.Value{
			"ErrNotFat": reflect.ValueOf(&q.ErrNotFat),
		},
		Funcs: map[string]reflect.Value{
			"NewFatFile": reflect.ValueOf(q.NewFatFile),
			"NewFile":    reflect.ValueOf(q.NewFile),
			"Open":       reflect.ValueOf(q.Open),
			"OpenFat":    reflect.ValueOf(q.OpenFat),
		},
		TypedConsts: map[string]gossa.TypedConst{
			"ARM64_RELOC_ADDEND":              {reflect.TypeOf(q.ARM64_RELOC_ADDEND), constant.MakeInt64(10)},
			"ARM64_RELOC_BRANCH26":            {reflect.TypeOf(q.ARM64_RELOC_BRANCH26), constant.MakeInt64(2)},
			"ARM64_RELOC_GOT_LOAD_PAGE21":     {reflect.TypeOf(q.ARM64_RELOC_GOT_LOAD_PAGE21), constant.MakeInt64(5)},
			"ARM64_RELOC_GOT_LOAD_PAGEOFF12":  {reflect.TypeOf(q.ARM64_RELOC_GOT_LOAD_PAGEOFF12), constant.MakeInt64(6)},
			"ARM64_RELOC_PAGE21":              {reflect.TypeOf(q.ARM64_RELOC_PAGE21), constant.MakeInt64(3)},
			"ARM64_RELOC_PAGEOFF12":           {reflect.TypeOf(q.ARM64_RELOC_PAGEOFF12), constant.MakeInt64(4)},
			"ARM64_RELOC_POINTER_TO_GOT":      {reflect.TypeOf(q.ARM64_RELOC_POINTER_TO_GOT), constant.MakeInt64(7)},
			"ARM64_RELOC_SUBTRACTOR":          {reflect.TypeOf(q.ARM64_RELOC_SUBTRACTOR), constant.MakeInt64(1)},
			"ARM64_RELOC_TLVP_LOAD_PAGE21":    {reflect.TypeOf(q.ARM64_RELOC_TLVP_LOAD_PAGE21), constant.MakeInt64(8)},
			"ARM64_RELOC_TLVP_LOAD_PAGEOFF12": {reflect.TypeOf(q.ARM64_RELOC_TLVP_LOAD_PAGEOFF12), constant.MakeInt64(9)},
			"ARM64_RELOC_UNSIGNED":            {reflect.TypeOf(q.ARM64_RELOC_UNSIGNED), constant.MakeInt64(0)},
			"ARM_RELOC_BR24":                  {reflect.TypeOf(q.ARM_RELOC_BR24), constant.MakeInt64(5)},
			"ARM_RELOC_HALF":                  {reflect.TypeOf(q.ARM_RELOC_HALF), constant.MakeInt64(8)},
			"ARM_RELOC_HALF_SECTDIFF":         {reflect.TypeOf(q.ARM_RELOC_HALF_SECTDIFF), constant.MakeInt64(9)},
			"ARM_RELOC_LOCAL_SECTDIFF":        {reflect.TypeOf(q.ARM_RELOC_LOCAL_SECTDIFF), constant.MakeInt64(3)},
			"ARM_RELOC_PAIR":                  {reflect.TypeOf(q.ARM_RELOC_PAIR), constant.MakeInt64(1)},
			"ARM_RELOC_PB_LA_PTR":             {reflect.TypeOf(q.ARM_RELOC_PB_LA_PTR), constant.MakeInt64(4)},
			"ARM_RELOC_SECTDIFF":              {reflect.TypeOf(q.ARM_RELOC_SECTDIFF), constant.MakeInt64(2)},
			"ARM_RELOC_VANILLA":               {reflect.TypeOf(q.ARM_RELOC_VANILLA), constant.MakeInt64(0)},
			"ARM_THUMB_32BIT_BRANCH":          {reflect.TypeOf(q.ARM_THUMB_32BIT_BRANCH), constant.MakeInt64(7)},
			"ARM_THUMB_RELOC_BR22":            {reflect.TypeOf(q.ARM_THUMB_RELOC_BR22), constant.MakeInt64(6)},
			"Cpu386":                          {reflect.TypeOf(q.Cpu386), constant.MakeInt64(7)},
			"CpuAmd64":                        {reflect.TypeOf(q.CpuAmd64), constant.MakeInt64(16777223)},
			"CpuArm":                          {reflect.TypeOf(q.CpuArm), constant.MakeInt64(12)},
			"CpuArm64":                        {reflect.TypeOf(q.CpuArm64), constant.MakeInt64(16777228)},
			"CpuPpc":                          {reflect.TypeOf(q.CpuPpc), constant.MakeInt64(18)},
			"CpuPpc64":                        {reflect.TypeOf(q.CpuPpc64), constant.MakeInt64(16777234)},
			"FlagAllModsBound":                {reflect.TypeOf(q.FlagAllModsBound), constant.MakeInt64(4096)},
			"FlagAllowStackExecution":         {reflect.TypeOf(q.FlagAllowStackExecution), constant.MakeInt64(131072)},
			"FlagAppExtensionSafe":            {reflect.TypeOf(q.FlagAppExtensionSafe), constant.MakeInt64(33554432)},
			"FlagBindAtLoad":                  {reflect.TypeOf(q.FlagBindAtLoad), constant.MakeInt64(8)},
			"FlagBindsToWeak":                 {reflect.TypeOf(q.FlagBindsToWeak), constant.MakeInt64(65536)},
			"FlagCanonical":                   {reflect.TypeOf(q.FlagCanonical), constant.MakeInt64(16384)},
			"FlagDeadStrippableDylib":         {reflect.TypeOf(q.FlagDeadStrippableDylib), constant.MakeInt64(4194304)},
			"FlagDyldLink":                    {reflect.TypeOf(q.FlagDyldLink), constant.MakeInt64(4)},
			"FlagForceFlat":                   {reflect.TypeOf(q.FlagForceFlat), constant.MakeInt64(256)},
			"FlagHasTLVDescriptors":           {reflect.TypeOf(q.FlagHasTLVDescriptors), constant.MakeInt64(8388608)},
			"FlagIncrLink":                    {reflect.TypeOf(q.FlagIncrLink), constant.MakeInt64(2)},
			"FlagLazyInit":                    {reflect.TypeOf(q.FlagLazyInit), constant.MakeInt64(64)},
			"FlagNoFixPrebinding":             {reflect.TypeOf(q.FlagNoFixPrebinding), constant.MakeInt64(1024)},
			"FlagNoHeapExecution":             {reflect.TypeOf(q.FlagNoHeapExecution), constant.MakeInt64(16777216)},
			"FlagNoMultiDefs":                 {reflect.TypeOf(q.FlagNoMultiDefs), constant.MakeInt64(512)},
			"FlagNoReexportedDylibs":          {reflect.TypeOf(q.FlagNoReexportedDylibs), constant.MakeInt64(1048576)},
			"FlagNoUndefs":                    {reflect.TypeOf(q.FlagNoUndefs), constant.MakeInt64(1)},
			"FlagPIE":                         {reflect.TypeOf(q.FlagPIE), constant.MakeInt64(2097152)},
			"FlagPrebindable":                 {reflect.TypeOf(q.FlagPrebindable), constant.MakeInt64(2048)},
			"FlagPrebound":                    {reflect.TypeOf(q.FlagPrebound), constant.MakeInt64(16)},
			"FlagRootSafe":                    {reflect.TypeOf(q.FlagRootSafe), constant.MakeInt64(262144)},
			"FlagSetuidSafe":                  {reflect.TypeOf(q.FlagSetuidSafe), constant.MakeInt64(524288)},
			"FlagSplitSegs":                   {reflect.TypeOf(q.FlagSplitSegs), constant.MakeInt64(32)},
			"FlagSubsectionsViaSymbols":       {reflect.TypeOf(q.FlagSubsectionsViaSymbols), constant.MakeInt64(8192)},
			"FlagTwoLevel":                    {reflect.TypeOf(q.FlagTwoLevel), constant.MakeInt64(128)},
			"FlagWeakDefines":                 {reflect.TypeOf(q.FlagWeakDefines), constant.MakeInt64(32768)},
			"GENERIC_RELOC_LOCAL_SECTDIFF":    {reflect.TypeOf(q.GENERIC_RELOC_LOCAL_SECTDIFF), constant.MakeInt64(4)},
			"GENERIC_RELOC_PAIR":              {reflect.TypeOf(q.GENERIC_RELOC_PAIR), constant.MakeInt64(1)},
			"GENERIC_RELOC_PB_LA_PTR":         {reflect.TypeOf(q.GENERIC_RELOC_PB_LA_PTR), constant.MakeInt64(3)},
			"GENERIC_RELOC_SECTDIFF":          {reflect.TypeOf(q.GENERIC_RELOC_SECTDIFF), constant.MakeInt64(2)},
			"GENERIC_RELOC_TLV":               {reflect.TypeOf(q.GENERIC_RELOC_TLV), constant.MakeInt64(5)},
			"GENERIC_RELOC_VANILLA":           {reflect.TypeOf(q.GENERIC_RELOC_VANILLA), constant.MakeInt64(0)},
			"LoadCmdDylib":                    {reflect.TypeOf(q.LoadCmdDylib), constant.MakeInt64(12)},
			"LoadCmdDylinker":                 {reflect.TypeOf(q.LoadCmdDylinker), constant.MakeInt64(15)},
			"LoadCmdDysymtab":                 {reflect.TypeOf(q.LoadCmdDysymtab), constant.MakeInt64(11)},
			"LoadCmdRpath":                    {reflect.TypeOf(q.LoadCmdRpath), constant.MakeInt64(2147483676)},
			"LoadCmdSegment":                  {reflect.TypeOf(q.LoadCmdSegment), constant.MakeInt64(1)},
			"LoadCmdSegment64":                {reflect.TypeOf(q.LoadCmdSegment64), constant.MakeInt64(25)},
			"LoadCmdSymtab":                   {reflect.TypeOf(q.LoadCmdSymtab), constant.MakeInt64(2)},
			"LoadCmdThread":                   {reflect.TypeOf(q.LoadCmdThread), constant.MakeInt64(4)},
			"LoadCmdUnixThread":               {reflect.TypeOf(q.LoadCmdUnixThread), constant.MakeInt64(5)},
			"Magic32":                         {reflect.TypeOf(q.Magic32), constant.MakeInt64(4277009102)},
			"Magic64":                         {reflect.TypeOf(q.Magic64), constant.MakeInt64(4277009103)},
			"MagicFat":                        {reflect.TypeOf(q.MagicFat), constant.MakeInt64(3405691582)},
			"TypeBundle":                      {reflect.TypeOf(q.TypeBundle), constant.MakeInt64(8)},
			"TypeDylib":                       {reflect.TypeOf(q.TypeDylib), constant.MakeInt64(6)},
			"TypeExec":                        {reflect.TypeOf(q.TypeExec), constant.MakeInt64(2)},
			"TypeObj":                         {reflect.TypeOf(q.TypeObj), constant.MakeInt64(1)},
			"X86_64_RELOC_BRANCH":             {reflect.TypeOf(q.X86_64_RELOC_BRANCH), constant.MakeInt64(2)},
			"X86_64_RELOC_GOT":                {reflect.TypeOf(q.X86_64_RELOC_GOT), constant.MakeInt64(4)},
			"X86_64_RELOC_GOT_LOAD":           {reflect.TypeOf(q.X86_64_RELOC_GOT_LOAD), constant.MakeInt64(3)},
			"X86_64_RELOC_SIGNED":             {reflect.TypeOf(q.X86_64_RELOC_SIGNED), constant.MakeInt64(1)},
			"X86_64_RELOC_SIGNED_1":           {reflect.TypeOf(q.X86_64_RELOC_SIGNED_1), constant.MakeInt64(6)},
			"X86_64_RELOC_SIGNED_2":           {reflect.TypeOf(q.X86_64_RELOC_SIGNED_2), constant.MakeInt64(7)},
			"X86_64_RELOC_SIGNED_4":           {reflect.TypeOf(q.X86_64_RELOC_SIGNED_4), constant.MakeInt64(8)},
			"X86_64_RELOC_SUBTRACTOR":         {reflect.TypeOf(q.X86_64_RELOC_SUBTRACTOR), constant.MakeInt64(5)},
			"X86_64_RELOC_TLV":                {reflect.TypeOf(q.X86_64_RELOC_TLV), constant.MakeInt64(9)},
			"X86_64_RELOC_UNSIGNED":           {reflect.TypeOf(q.X86_64_RELOC_UNSIGNED), constant.MakeInt64(0)},
		},
		UntypedConsts: map[string]gossa.UntypedConst{},
	})
}
