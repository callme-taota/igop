// export by github.com/goplus/interp/cmd/qexp

package types

import (
	"go/types"

	"github.com/goplus/interp"
)

func init() {
	interp.RegisterPackage("go/types", extMap, typList)
}

var extMap = map[string]interface{}{
	"(*go/types.Array).Elem":                   (*types.Array).Elem,
	"(*go/types.Array).Len":                    (*types.Array).Len,
	"(*go/types.Array).String":                 (*types.Array).String,
	"(*go/types.Array).Underlying":             (*types.Array).Underlying,
	"(*go/types.Basic).Info":                   (*types.Basic).Info,
	"(*go/types.Basic).Kind":                   (*types.Basic).Kind,
	"(*go/types.Basic).Name":                   (*types.Basic).Name,
	"(*go/types.Basic).String":                 (*types.Basic).String,
	"(*go/types.Basic).Underlying":             (*types.Basic).Underlying,
	"(*go/types.Builtin).Exported":             (*types.Builtin).Exported,
	"(*go/types.Builtin).Id":                   (*types.Builtin).Id,
	"(*go/types.Builtin).Name":                 (*types.Builtin).Name,
	"(*go/types.Builtin).Parent":               (*types.Builtin).Parent,
	"(*go/types.Builtin).Pkg":                  (*types.Builtin).Pkg,
	"(*go/types.Builtin).Pos":                  (*types.Builtin).Pos,
	"(*go/types.Builtin).String":               (*types.Builtin).String,
	"(*go/types.Builtin).Type":                 (*types.Builtin).Type,
	"(*go/types.Chan).Dir":                     (*types.Chan).Dir,
	"(*go/types.Chan).Elem":                    (*types.Chan).Elem,
	"(*go/types.Chan).String":                  (*types.Chan).String,
	"(*go/types.Chan).Underlying":              (*types.Chan).Underlying,
	"(*go/types.Checker).Files":                (*types.Checker).Files,
	"(*go/types.Config).Check":                 (*types.Config).Check,
	"(*go/types.Const).Exported":               (*types.Const).Exported,
	"(*go/types.Const).Id":                     (*types.Const).Id,
	"(*go/types.Const).Name":                   (*types.Const).Name,
	"(*go/types.Const).Parent":                 (*types.Const).Parent,
	"(*go/types.Const).Pkg":                    (*types.Const).Pkg,
	"(*go/types.Const).Pos":                    (*types.Const).Pos,
	"(*go/types.Const).String":                 (*types.Const).String,
	"(*go/types.Const).Type":                   (*types.Const).Type,
	"(*go/types.Const).Val":                    (*types.Const).Val,
	"(*go/types.Func).Exported":                (*types.Func).Exported,
	"(*go/types.Func).FullName":                (*types.Func).FullName,
	"(*go/types.Func).Id":                      (*types.Func).Id,
	"(*go/types.Func).Name":                    (*types.Func).Name,
	"(*go/types.Func).Parent":                  (*types.Func).Parent,
	"(*go/types.Func).Pkg":                     (*types.Func).Pkg,
	"(*go/types.Func).Pos":                     (*types.Func).Pos,
	"(*go/types.Func).Scope":                   (*types.Func).Scope,
	"(*go/types.Func).String":                  (*types.Func).String,
	"(*go/types.Func).Type":                    (*types.Func).Type,
	"(*go/types.Info).ObjectOf":                (*types.Info).ObjectOf,
	"(*go/types.Info).TypeOf":                  (*types.Info).TypeOf,
	"(*go/types.Initializer).String":           (*types.Initializer).String,
	"(*go/types.Interface).Complete":           (*types.Interface).Complete,
	"(*go/types.Interface).Embedded":           (*types.Interface).Embedded,
	"(*go/types.Interface).EmbeddedType":       (*types.Interface).EmbeddedType,
	"(*go/types.Interface).Empty":              (*types.Interface).Empty,
	"(*go/types.Interface).ExplicitMethod":     (*types.Interface).ExplicitMethod,
	"(*go/types.Interface).Method":             (*types.Interface).Method,
	"(*go/types.Interface).NumEmbeddeds":       (*types.Interface).NumEmbeddeds,
	"(*go/types.Interface).NumExplicitMethods": (*types.Interface).NumExplicitMethods,
	"(*go/types.Interface).NumMethods":         (*types.Interface).NumMethods,
	"(*go/types.Interface).String":             (*types.Interface).String,
	"(*go/types.Interface).Underlying":         (*types.Interface).Underlying,
	"(*go/types.Label).Exported":               (*types.Label).Exported,
	"(*go/types.Label).Id":                     (*types.Label).Id,
	"(*go/types.Label).Name":                   (*types.Label).Name,
	"(*go/types.Label).Parent":                 (*types.Label).Parent,
	"(*go/types.Label).Pkg":                    (*types.Label).Pkg,
	"(*go/types.Label).Pos":                    (*types.Label).Pos,
	"(*go/types.Label).String":                 (*types.Label).String,
	"(*go/types.Label).Type":                   (*types.Label).Type,
	"(*go/types.Map).Elem":                     (*types.Map).Elem,
	"(*go/types.Map).Key":                      (*types.Map).Key,
	"(*go/types.Map).String":                   (*types.Map).String,
	"(*go/types.Map).Underlying":               (*types.Map).Underlying,
	"(*go/types.MethodSet).At":                 (*types.MethodSet).At,
	"(*go/types.MethodSet).Len":                (*types.MethodSet).Len,
	"(*go/types.MethodSet).Lookup":             (*types.MethodSet).Lookup,
	"(*go/types.MethodSet).String":             (*types.MethodSet).String,
	"(*go/types.Named).AddMethod":              (*types.Named).AddMethod,
	"(*go/types.Named).Method":                 (*types.Named).Method,
	"(*go/types.Named).NumMethods":             (*types.Named).NumMethods,
	"(*go/types.Named).Obj":                    (*types.Named).Obj,
	"(*go/types.Named).SetUnderlying":          (*types.Named).SetUnderlying,
	"(*go/types.Named).String":                 (*types.Named).String,
	"(*go/types.Named).Underlying":             (*types.Named).Underlying,
	"(*go/types.Nil).Exported":                 (*types.Nil).Exported,
	"(*go/types.Nil).Id":                       (*types.Nil).Id,
	"(*go/types.Nil).Name":                     (*types.Nil).Name,
	"(*go/types.Nil).Parent":                   (*types.Nil).Parent,
	"(*go/types.Nil).Pkg":                      (*types.Nil).Pkg,
	"(*go/types.Nil).Pos":                      (*types.Nil).Pos,
	"(*go/types.Nil).String":                   (*types.Nil).String,
	"(*go/types.Nil).Type":                     (*types.Nil).Type,
	"(*go/types.Package).Complete":             (*types.Package).Complete,
	"(*go/types.Package).Imports":              (*types.Package).Imports,
	"(*go/types.Package).MarkComplete":         (*types.Package).MarkComplete,
	"(*go/types.Package).Name":                 (*types.Package).Name,
	"(*go/types.Package).Path":                 (*types.Package).Path,
	"(*go/types.Package).Scope":                (*types.Package).Scope,
	"(*go/types.Package).SetImports":           (*types.Package).SetImports,
	"(*go/types.Package).SetName":              (*types.Package).SetName,
	"(*go/types.Package).String":               (*types.Package).String,
	"(*go/types.PkgName).Exported":             (*types.PkgName).Exported,
	"(*go/types.PkgName).Id":                   (*types.PkgName).Id,
	"(*go/types.PkgName).Imported":             (*types.PkgName).Imported,
	"(*go/types.PkgName).Name":                 (*types.PkgName).Name,
	"(*go/types.PkgName).Parent":               (*types.PkgName).Parent,
	"(*go/types.PkgName).Pkg":                  (*types.PkgName).Pkg,
	"(*go/types.PkgName).Pos":                  (*types.PkgName).Pos,
	"(*go/types.PkgName).String":               (*types.PkgName).String,
	"(*go/types.PkgName).Type":                 (*types.PkgName).Type,
	"(*go/types.Pointer).Elem":                 (*types.Pointer).Elem,
	"(*go/types.Pointer).String":               (*types.Pointer).String,
	"(*go/types.Pointer).Underlying":           (*types.Pointer).Underlying,
	"(*go/types.Scope).Child":                  (*types.Scope).Child,
	"(*go/types.Scope).Contains":               (*types.Scope).Contains,
	"(*go/types.Scope).End":                    (*types.Scope).End,
	"(*go/types.Scope).Innermost":              (*types.Scope).Innermost,
	"(*go/types.Scope).Insert":                 (*types.Scope).Insert,
	"(*go/types.Scope).Len":                    (*types.Scope).Len,
	"(*go/types.Scope).Lookup":                 (*types.Scope).Lookup,
	"(*go/types.Scope).LookupParent":           (*types.Scope).LookupParent,
	"(*go/types.Scope).Names":                  (*types.Scope).Names,
	"(*go/types.Scope).NumChildren":            (*types.Scope).NumChildren,
	"(*go/types.Scope).Parent":                 (*types.Scope).Parent,
	"(*go/types.Scope).Pos":                    (*types.Scope).Pos,
	"(*go/types.Scope).String":                 (*types.Scope).String,
	"(*go/types.Scope).WriteTo":                (*types.Scope).WriteTo,
	"(*go/types.Selection).Index":              (*types.Selection).Index,
	"(*go/types.Selection).Indirect":           (*types.Selection).Indirect,
	"(*go/types.Selection).Kind":               (*types.Selection).Kind,
	"(*go/types.Selection).Obj":                (*types.Selection).Obj,
	"(*go/types.Selection).Recv":               (*types.Selection).Recv,
	"(*go/types.Selection).String":             (*types.Selection).String,
	"(*go/types.Selection).Type":               (*types.Selection).Type,
	"(*go/types.Signature).Params":             (*types.Signature).Params,
	"(*go/types.Signature).Recv":               (*types.Signature).Recv,
	"(*go/types.Signature).Results":            (*types.Signature).Results,
	"(*go/types.Signature).String":             (*types.Signature).String,
	"(*go/types.Signature).Underlying":         (*types.Signature).Underlying,
	"(*go/types.Signature).Variadic":           (*types.Signature).Variadic,
	"(*go/types.Slice).Elem":                   (*types.Slice).Elem,
	"(*go/types.Slice).String":                 (*types.Slice).String,
	"(*go/types.Slice).Underlying":             (*types.Slice).Underlying,
	"(*go/types.StdSizes).Alignof":             (*types.StdSizes).Alignof,
	"(*go/types.StdSizes).Offsetsof":           (*types.StdSizes).Offsetsof,
	"(*go/types.StdSizes).Sizeof":              (*types.StdSizes).Sizeof,
	"(*go/types.Struct).Field":                 (*types.Struct).Field,
	"(*go/types.Struct).NumFields":             (*types.Struct).NumFields,
	"(*go/types.Struct).String":                (*types.Struct).String,
	"(*go/types.Struct).Tag":                   (*types.Struct).Tag,
	"(*go/types.Struct).Underlying":            (*types.Struct).Underlying,
	"(*go/types.Tuple).At":                     (*types.Tuple).At,
	"(*go/types.Tuple).Len":                    (*types.Tuple).Len,
	"(*go/types.Tuple).String":                 (*types.Tuple).String,
	"(*go/types.Tuple).Underlying":             (*types.Tuple).Underlying,
	"(*go/types.TypeName).Exported":            (*types.TypeName).Exported,
	"(*go/types.TypeName).Id":                  (*types.TypeName).Id,
	"(*go/types.TypeName).IsAlias":             (*types.TypeName).IsAlias,
	"(*go/types.TypeName).Name":                (*types.TypeName).Name,
	"(*go/types.TypeName).Parent":              (*types.TypeName).Parent,
	"(*go/types.TypeName).Pkg":                 (*types.TypeName).Pkg,
	"(*go/types.TypeName).Pos":                 (*types.TypeName).Pos,
	"(*go/types.TypeName).String":              (*types.TypeName).String,
	"(*go/types.TypeName).Type":                (*types.TypeName).Type,
	"(*go/types.Var).Anonymous":                (*types.Var).Anonymous,
	"(*go/types.Var).Embedded":                 (*types.Var).Embedded,
	"(*go/types.Var).Exported":                 (*types.Var).Exported,
	"(*go/types.Var).Id":                       (*types.Var).Id,
	"(*go/types.Var).IsField":                  (*types.Var).IsField,
	"(*go/types.Var).Name":                     (*types.Var).Name,
	"(*go/types.Var).Parent":                   (*types.Var).Parent,
	"(*go/types.Var).Pkg":                      (*types.Var).Pkg,
	"(*go/types.Var).Pos":                      (*types.Var).Pos,
	"(*go/types.Var).String":                   (*types.Var).String,
	"(*go/types.Var).Type":                     (*types.Var).Type,
	"(go/types.Checker).ObjectOf":              (types.Checker).ObjectOf,
	"(go/types.Checker).TypeOf":                (types.Checker).TypeOf,
	"(go/types.Error).Error":                   (types.Error).Error,
	"(go/types.Importer).Import":               (types.Importer).Import,
	"(go/types.ImporterFrom).Import":           (types.ImporterFrom).Import,
	"(go/types.ImporterFrom).ImportFrom":       (types.ImporterFrom).ImportFrom,
	"(go/types.Object).Exported":               (types.Object).Exported,
	"(go/types.Object).Id":                     (types.Object).Id,
	"(go/types.Object).Name":                   (types.Object).Name,
	"(go/types.Object).Parent":                 (types.Object).Parent,
	"(go/types.Object).Pkg":                    (types.Object).Pkg,
	"(go/types.Object).Pos":                    (types.Object).Pos,
	"(go/types.Object).String":                 (types.Object).String,
	"(go/types.Object).Type":                   (types.Object).Type,
	"(go/types.Sizes).Alignof":                 (types.Sizes).Alignof,
	"(go/types.Sizes).Offsetsof":               (types.Sizes).Offsetsof,
	"(go/types.Sizes).Sizeof":                  (types.Sizes).Sizeof,
	"(go/types.Type).String":                   (types.Type).String,
	"(go/types.Type).Underlying":               (types.Type).Underlying,
	"(go/types.TypeAndValue).Addressable":      (types.TypeAndValue).Addressable,
	"(go/types.TypeAndValue).Assignable":       (types.TypeAndValue).Assignable,
	"(go/types.TypeAndValue).HasOk":            (types.TypeAndValue).HasOk,
	"(go/types.TypeAndValue).IsBuiltin":        (types.TypeAndValue).IsBuiltin,
	"(go/types.TypeAndValue).IsNil":            (types.TypeAndValue).IsNil,
	"(go/types.TypeAndValue).IsType":           (types.TypeAndValue).IsType,
	"(go/types.TypeAndValue).IsValue":          (types.TypeAndValue).IsValue,
	"(go/types.TypeAndValue).IsVoid":           (types.TypeAndValue).IsVoid,
	"go/types.AssertableTo":                    types.AssertableTo,
	"go/types.AssignableTo":                    types.AssignableTo,
	"go/types.CheckExpr":                       types.CheckExpr,
	"go/types.Comparable":                      types.Comparable,
	"go/types.ConvertibleTo":                   types.ConvertibleTo,
	"go/types.DefPredeclaredTestFuncs":         types.DefPredeclaredTestFuncs,
	"go/types.Default":                         types.Default,
	"go/types.Eval":                            types.Eval,
	"go/types.ExprString":                      types.ExprString,
	"go/types.Id":                              types.Id,
	"go/types.Identical":                       types.Identical,
	"go/types.IdenticalIgnoreTags":             types.IdenticalIgnoreTags,
	"go/types.Implements":                      types.Implements,
	"go/types.IsInterface":                     types.IsInterface,
	"go/types.LookupFieldOrMethod":             types.LookupFieldOrMethod,
	"go/types.MissingMethod":                   types.MissingMethod,
	"go/types.NewArray":                        types.NewArray,
	"go/types.NewChan":                         types.NewChan,
	"go/types.NewChecker":                      types.NewChecker,
	"go/types.NewConst":                        types.NewConst,
	"go/types.NewField":                        types.NewField,
	"go/types.NewFunc":                         types.NewFunc,
	"go/types.NewInterface":                    types.NewInterface,
	"go/types.NewInterfaceType":                types.NewInterfaceType,
	"go/types.NewLabel":                        types.NewLabel,
	"go/types.NewMap":                          types.NewMap,
	"go/types.NewMethodSet":                    types.NewMethodSet,
	"go/types.NewNamed":                        types.NewNamed,
	"go/types.NewPackage":                      types.NewPackage,
	"go/types.NewParam":                        types.NewParam,
	"go/types.NewPkgName":                      types.NewPkgName,
	"go/types.NewPointer":                      types.NewPointer,
	"go/types.NewScope":                        types.NewScope,
	"go/types.NewSignature":                    types.NewSignature,
	"go/types.NewSlice":                        types.NewSlice,
	"go/types.NewStruct":                       types.NewStruct,
	"go/types.NewTuple":                        types.NewTuple,
	"go/types.NewTypeName":                     types.NewTypeName,
	"go/types.NewVar":                          types.NewVar,
	"go/types.ObjectString":                    types.ObjectString,
	"go/types.RelativeTo":                      types.RelativeTo,
	"go/types.SelectionString":                 types.SelectionString,
	"go/types.SizesFor":                        types.SizesFor,
	"go/types.Typ":                             &types.Typ,
	"go/types.TypeString":                      types.TypeString,
	"go/types.Universe":                        &types.Universe,
	"go/types.Unsafe":                          &types.Unsafe,
	"go/types.WriteExpr":                       types.WriteExpr,
	"go/types.WriteSignature":                  types.WriteSignature,
	"go/types.WriteType":                       types.WriteType,
}

var typList = []interface{}{
	(*types.Array)(nil),
	(*types.Basic)(nil),
	(*types.BasicInfo)(nil),
	(*types.BasicKind)(nil),
	(*types.Builtin)(nil),
	(*types.Chan)(nil),
	(*types.ChanDir)(nil),
	(*types.Checker)(nil),
	(*types.Config)(nil),
	(*types.Const)(nil),
	(*types.Error)(nil),
	(*types.Func)(nil),
	(*types.ImportMode)(nil),
	(*types.Importer)(nil),
	(*types.ImporterFrom)(nil),
	(*types.Info)(nil),
	(*types.Initializer)(nil),
	(*types.Interface)(nil),
	(*types.Label)(nil),
	(*types.Map)(nil),
	(*types.MethodSet)(nil),
	(*types.Named)(nil),
	(*types.Nil)(nil),
	(*types.Object)(nil),
	(*types.Package)(nil),
	(*types.PkgName)(nil),
	(*types.Pointer)(nil),
	(*types.Qualifier)(nil),
	(*types.Scope)(nil),
	(*types.Selection)(nil),
	(*types.SelectionKind)(nil),
	(*types.Signature)(nil),
	(*types.Sizes)(nil),
	(*types.Slice)(nil),
	(*types.StdSizes)(nil),
	(*types.Struct)(nil),
	(*types.Tuple)(nil),
	(*types.Type)(nil),
	(*types.TypeAndValue)(nil),
	(*types.TypeName)(nil),
	(*types.Var)(nil),
}
